HTML guidelines 
We must sort components based on their usage and put them in correct orther(top to bottom/ header to footer)
We also must put them in correct wrappers (div/span/main/nav), and correctly group them, so its easier to work on them.
When making the components give them classes name that describe the element itself and point to its purpouse.
In the head of the HTML is where the external links for fonts,logos,icons or other libraries with builit-in components are put, but before them we link the css files
in order the styles to load first, cause they are the important thing on the website.We also need to keep in mind that the more outside elements make 
the loading of the site slower.Also libraries like bootstrap have built-in classes that add styles on their own, so we can check them out before we
put styles of our own.In the head stay things like links to other pages on the website or navigation bars, logos and name of the site etc.
In the body we put the main content of app(text,graphs,tables,images,videos etc.)Each of the components can be build with several elements in it like
(submit button,dropdown menu,searchbar,checkbox) that wait for an event (being clicked on them, hover etc) to make the component do its job.
We could link images that we want to use on the site internal or external.Internal by linking them with URL , external by putting them in a folder in the
project folder so we can accses them easily(naming them with names that point where we want to use them like background-Img-HomePage).
The footer is at the bottom of app nad usually holds the social media icons + links,copyrights,contacts etc.The javascript scripts are linked in the footer,
to make sure the page loads correctly(javascript files are bigger than the css/fonts) and in order to work properly,because we dont need the the functionality
that the scripts bring until the whole page is loaded.
We can add the components section by section and work on their styles/spacing compared to each other and compared to the window, and after that we continue with 
the next section(example : first creating the top navBar + logo + dropdown menu that are stored in the head, add the styles the spacing and then move to the body).


Some useful HTML5 hyperlink/link tips: 
1. If you want to access to an image in a different folder use:
<a href="(name of the folder)(/)(image name)">Text that will lead you to image</a>
2. If you want to make a link that will download an image, which is in a different folder, use:
<a href="(name of the folder)(/)(image name)" download>Text that you click in order to start downloading image</a>
3. If you want to have a link that will transport you to a specific section on the html page, put an id property to the el ypu want to transport to and use:
<a href="(#)(specific section id)">Text that will lead you to section</a>
4. If you want the user to open the link in a different tab use (_blank):
<a href="примерно: https://google.com" target="_blank>Text that will lead you to примено:google</a>
5. If you want to have a link that will lead the user directly to his email(something like a contact menu):
<a href="mailto:(your email addres)">Text that will lead the user to his email</a>

Some useful CSS tips:
1. If you want to make the image round you need to make the 'width' property 2 times bigger than the 'border-radius' property of the stylesheet doc.
2. 